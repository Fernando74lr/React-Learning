{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const isMounted = useRef(true);\n  useEffect(() => () => isMounted.current = false, []);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    setState({\n      data: null,\n      loading: true,\n      error: null\n    });\n    fetch(url).then(res => res.json()).then(data => {\n      setTimeout(() => {\n        if (isMounted.current) {\n          setState({\n            loading: false,\n            error: null,\n            data\n          });\n        } else {\n          setState('No se llamó');\n        }\n      }, 4000);\n    });\n  }, [url]);\n  return state;\n};\n\n_s(useFetch, \"av436ga+E+PwpYfjhfxA/G1EXeE=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Fer/Desktop/React Learning/React-Learning/react-course/04-hook-app/src/hooks/useFetch.jsx"],"names":["useState","useEffect","useRef","useFetch","url","isMounted","current","state","setState","data","loading","error","fetch","then","res","json","setTimeout"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;AAEA,MAAMC,QAAQ,GAAKC,GAAF,IAAW;AAAA;;AAExB,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM,MAAMI,SAAS,CAACC,OAAV,GAAoB,KAAjC,EAAwC,EAAxC,CAAT;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAC/BS,IAAAA,IAAI,EAAE,IADyB;AAE/BC,IAAAA,OAAO,EAAE,IAFsB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAlC;AAMAV,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,OAAO,EAAE,IAFJ;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAD,CAAR;AAMAC,IAAAA,KAAK,CAACR,GAAD,CAAL,CACKS,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUJ,IAAI,IAAI;AACVO,MAAAA,UAAU,CAAC,MAAM;AACb,YAAIX,SAAS,CAACC,OAAd,EAAuB;AACnBE,UAAAA,QAAQ,CAAC;AACLE,YAAAA,OAAO,EAAE,KADJ;AAELC,YAAAA,KAAK,EAAE,IAFF;AAGLF,YAAAA;AAHK,WAAD,CAAR;AAKH,SAND,MAMO;AACHD,UAAAA,QAAQ,CAAC,aAAD,CAAR;AACH;AACJ,OAVS,EAUP,IAVO,CAAV;AAWH,KAdL;AAeH,GAvBQ,EAuBN,CAACJ,GAAD,CAvBM,CAAT;AAyBA,SAAOG,KAAP;AACH,CAtCD;;GAAMJ,Q;;AAwCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useFetch = ( url ) => {\r\n\r\n    const isMounted = useRef(true);\r\n\r\n    useEffect(() => () => isMounted.current = false, [])\r\n    \r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        setState({\r\n            data: null,\r\n            loading: true,\r\n            error: null\r\n        });\r\n        \r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setTimeout(() => {\r\n                    if (isMounted.current) {\r\n                        setState({\r\n                            loading: false,\r\n                            error: null,\r\n                            data\r\n                        });\r\n                    } else {\r\n                        setState('No se llamó')\r\n                    }\r\n                }, 4000);\r\n            })\r\n    }, [url]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}