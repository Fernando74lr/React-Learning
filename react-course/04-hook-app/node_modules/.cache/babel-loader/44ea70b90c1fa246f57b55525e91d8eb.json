{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    setState({\n      data: null,\n      loading: true,\n      error: null\n    });\n    fetch(url).then(res => res.json()).then(data => {\n      setState({\n        loading: false,\n        error: null,\n        data\n      });\n    });\n  }, [url]);\n  return state;\n};\n\n_s(useFetch, \"ZA0Q1n361yde/tXrjZ0XC5E/+cA=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Fer/Desktop/React Learning/React-Learning/react-course/04-hook-app/src/hooks/useFetch.jsx"],"names":["useState","useEffect","useFetch","url","state","setState","data","loading","error","fetch","then","res","json"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAKC,GAAF,IAAW;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAC/BM,IAAAA,IAAI,EAAE,IADyB;AAE/BC,IAAAA,OAAO,EAAE,IAFsB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAlC;AAMAP,EAAAA,SAAS,CAAC,MAAM;AAEZI,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,OAAO,EAAE,IAFJ;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAD,CAAR;AAMAC,IAAAA,KAAK,CAACN,GAAD,CAAL,CACKO,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUJ,IAAI,IAAI;AACVD,MAAAA,QAAQ,CAAC;AACLE,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAE,IAFF;AAGLF,QAAAA;AAHK,OAAD,CAAR;AAKH,KARL;AASH,GAjBQ,EAiBN,CAACH,GAAD,CAjBM,CAAT;AAmBA,SAAOC,KAAP;AACH,CA5BD;;GAAMF,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = ( url ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        setState({\r\n            data: null,\r\n            loading: true,\r\n            error: null\r\n        });\r\n        \r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setState({\r\n                    loading: false,\r\n                    error: null,\r\n                    data\r\n                })\r\n            })\r\n    }, [url]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}