{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fer\\\\Desktop\\\\React Learning\\\\React-Learning\\\\react-course\\\\04-hook-app\\\\src\\\\components\\\\08-useReducer\\\\TodoAdd.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useForm from '../../hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoAdd = ({\n  onHandleAddTodo\n}) => {\n  _s();\n\n  const [{\n    description\n  }, handleInputChange, reset] = useForm({\n    description: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (description.trim().length <= 1) return;\n    const newTodo = {\n      id: new Date().getTime(),\n      desc: description,\n      done: false\n    };\n    const action = {\n      type: 'add',\n      payload: newTodo\n    };\n    onHandleAddTodo(newTodo);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        className: \"form-control\",\n        placeholder: \"Learn...\",\n        autoComplete: \"off\",\n        value: description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-primary mt-1 btn-block\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoAdd, \"pBkyySehuOdIWnlTQxBQHAqLMDU=\", false, function () {\n  return [useForm];\n});\n\n_c = TodoAdd;\nexport default TodoAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoAdd\");","map":{"version":3,"sources":["C:/Users/Fer/Desktop/React Learning/React-Learning/react-course/04-hook-app/src/components/08-useReducer/TodoAdd.jsx"],"names":["React","useForm","TodoAdd","onHandleAddTodo","description","handleInputChange","reset","handleSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","action","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAAA;;AAErC,QAAM,CAAE;AAAEC,IAAAA;AAAF,GAAF,EAAmBC,iBAAnB,EAAsCC,KAAtC,IAAgDL,OAAO,CAAC;AAC1DG,IAAAA,WAAW,EAAE;AAD6C,GAAD,CAA7D;;AAIA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIL,WAAW,CAACM,IAAZ,GAAmBC,MAAnB,IAA6B,CAAjC,EAAoC;AAEpC,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADQ;AAEZC,MAAAA,IAAI,EAAEZ,WAFM;AAGZa,MAAAA,IAAI,EAAE;AAHM,KAAhB;AAMA,UAAMC,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,OAAO,EAAER;AAFE,KAAf;AAKAT,IAAAA,eAAe,CAACS,OAAD,CAAf;AACAN,IAAAA,KAAK;AACR,GAjBD;;AAmBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,QAAQ,EAAGC,YAAjB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,aAFT;AAGI,QAAA,SAAS,EAAC,cAHd;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,YAAY,EAAC,KALjB;AAMI,QAAA,KAAK,EAAGH,WANZ;AAOI,QAAA,QAAQ,EAAGC;AAPf;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,wCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAwBH,CAjDD;;GAAMH,O;UAEoDD,O;;;KAFpDC,O;AAmDN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport useForm from '../../hooks/useForm';\r\n\r\nconst TodoAdd = ({ onHandleAddTodo }) => {\r\n    \r\n    const [ { description }, handleInputChange, reset ] = useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (description.trim().length <= 1) return;\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        const action = {\r\n            type: 'add',\r\n            payload: newTodo\r\n        }\r\n\r\n        onHandleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Add To Do</h4>\r\n            <hr />\r\n            \r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Learn...\"\r\n                    autoComplete=\"off\"\r\n                    value={ description }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                >\r\n                    Add Task\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoAdd\r\n"]},"metadata":{},"sourceType":"module"}